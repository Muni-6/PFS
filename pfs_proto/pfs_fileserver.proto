syntax = "proto3";

package pfs;

// Service definition for the PFS file server
service FileServer {
    // RPC to read a chunk of data from the file server
    rpc ReadChunk(ReadChunkRequest) returns (ReadChunkResponse);

    // RPC to write a chunk of data to the file server
    rpc WriteChunk(WriteChunkRequest) returns (WriteChunkResponse);

    rpc DeleteChunkFile(DeleteChunkFileRequest) returns (DeleteChunkFileResponse);

    // RPC to get information about a file chunk
    rpc GetChunkInfo(GetChunkInfoRequest) returns (GetChunkInfoResponse);

    rpc CheckAliveServer(AliveRequest) returns (AliveResponse);

    rpc GetFileInfo(GetChunkInfoRequest) returns (GetChunkInfoResponse);
}

// Message definitions
// Request to read a chunk of data
message AliveRequest {
}

message AliveResponse {
    bool alive = 1;
    string server_message = 2;
}
message ReadChunkRequest {
    string filename = 1;       // The name of the file
    int64 offset = 2;          // The offset in the file to start reading from
    int64 num_bytes = 3;       // The number of bytes to read
}

// Response for ReadChunk
message ReadChunkResponse {
    bytes data = 1;            // The data read from the file chunk
    bool success = 2;
    string error_message = 3;
}

// Request to write a chunk of data
message WriteChunkRequest {
    string filename = 1;       // The name of the file
    int64 offset = 2;          // The offset in the file to start writing at
    bytes data = 3;            // The data to be written
}
// Response for WriteChunk
message WriteChunkResponse {
    int64 bytes_written = 1;   // The number of bytes successfully written
    bool success = 2;
    string error_message = 3;
}

// Request to delete a file chunk
message DeleteChunkFileRequest {
    string filename = 1;       // The name of the file to be deleted
   
}

// Response for DeleteChunk
message DeleteChunkFileResponse {
    bool success = 1;
    string message = 2; // Optional error message
}
// Request to get information about a file chunk
message GetChunkInfoRequest {
    string filename = 1;       // The name of the file
}

// Response for GetChunkInfo
message GetChunkInfoResponse {
    int64 file_size = 1;       // The size of the file chunk
    bool success = 2;
    string error_message = 3;
}
